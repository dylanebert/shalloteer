import type { Plugin } from '../../core';
import {
  ApplyAngularImpulse,
  ApplyForce,
  ApplyImpulse,
  ApplyTorque,
  Body,
  CharacterController,
  CharacterMovement,
  Collider,
  CollisionEvents,
  InterpolatedTransform,
  KinematicMove,
  KinematicRotate,
  PhysicsWorld,
  SetAngularVelocity,
  SetLinearVelocity,
  TouchedEvent,
  TouchEndedEvent,
} from './components';
import {
  dynamicPartRecipe,
  kinematicPartRecipe,
  staticPartRecipe,
} from './recipes';
import {
  ApplyAngularImpulsesSystem,
  ApplyForcesSystem,
  ApplyImpulsesSystem,
  ApplyTorquesSystem,
  CharacterMovementSystem,
  CollisionEventCleanupSystem,
  KinematicMovementSystem,
  PhysicsCleanupSystem,
  PhysicsInitializationSystem,
  PhysicsInterpolationSystem,
  PhysicsRapierSyncSystem,
  PhysicsStepSystem,
  PhysicsWorldSystem,
  SetVelocitySystem,
  TeleportationSystem,
} from './systems';

export const PhysicsPlugin: Plugin = {
  systems: [
    PhysicsWorldSystem,
    PhysicsInitializationSystem,
    CharacterMovementSystem,
    PhysicsCleanupSystem,
    CollisionEventCleanupSystem,
    ApplyForcesSystem,
    ApplyTorquesSystem,
    ApplyImpulsesSystem,
    ApplyAngularImpulsesSystem,
    SetVelocitySystem,
    TeleportationSystem,
    KinematicMovementSystem,
    PhysicsStepSystem,
    PhysicsRapierSyncSystem,
    PhysicsInterpolationSystem,
  ],
  recipes: [staticPartRecipe, dynamicPartRecipe, kinematicPartRecipe],
  components: {
    PhysicsWorld,
    Body,
    Collider,
    CharacterController,
    CharacterMovement,
    InterpolatedTransform,
    CollisionEvents,
    TouchedEvent,
    TouchEndedEvent,
    KinematicMove,
    KinematicRotate,
    ApplyForce,
    ApplyImpulse,
    ApplyTorque,
    ApplyAngularImpulse,
    SetLinearVelocity,
    SetAngularVelocity,
  },
  config: {
    defaults: {
      body: {
        type: 0, // Fixed/Static
        mass: 1,
        gravityScale: 1,
        rotW: 1,
        eulerX: 0,
        eulerY: 0,
        eulerZ: 0,
      },
      collider: {
        shape: 0, // Box
        sizeX: 1,
        sizeY: 1,
        sizeZ: 1,
        radius: 0.5,
        height: 1,
        friction: 0.5,
        restitution: 0,
        density: 1,
        isSensor: 0,
        membershipGroups: 0xffff,
        filterGroups: 0xffff,
        posOffsetX: 0,
        posOffsetY: 0,
        posOffsetZ: 0,
        rotOffsetX: 0,
        rotOffsetY: 0,
        rotOffsetZ: 0,
        rotOffsetW: 1,
      },
      'character-controller': {
        offset: 0.08,
        maxSlope: 45 * (Math.PI / 180),
        maxSlide: 30 * (Math.PI / 180),
        snapDist: 0.5,
        autoStep: 1,
        maxStepHeight: 0.3,
        minStepWidth: 0.05,
        upX: 0,
        upY: 1,
        upZ: 0,
      },
    },
    enums: {
      body: {
        type: {
          fixed: 0,
          static: 0,
          dynamic: 1,
          'kinematic-position': 2,
          'kinematic-position-based': 2,
          kinematic: 3,
          'kinematic-velocity': 3,
          'kinematic-velocity-based': 3,
        },
      },
      collider: {
        shape: {
          box: 0,
          cuboid: 0,
          sphere: 1,
          ball: 1,
          capsule: 2,
          cylinder: 3,
          cone: 4,
        },
      },
    },
  },
};
